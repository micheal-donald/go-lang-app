name: "Build docker and push to ECR"
#trigger
on:
  push:
    branches: [main]

env:
  AWS_REGION: af-south-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: kra_ecr           # set this to your Amazon ECR repository name
  ECS_SERVICE: kra_ecs_service                 # set this to your Amazon ECS service name
  ECS_CLUSTER: kra_ecs                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: my-kra-container           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition


#jobs with steps to build and push
jobs:
  build-and-push-image:
    name: Build and push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      #replace with patch,minor or major depending on release
      - name: Automatic tagging of releases
        id: increment-git-tag
        run: |
          bash ./build/git_update.sh -v minor

      - name: Build,Tag and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: kra_ecr
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.increment-git-tag.outputs.git-tag }}

      - name: Deploy to Amazon ECS
        id: deploy-ecs
        uses: aws-actions/amazon-ecs-deploy-task@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE }}
          wait-for-service-stability: true